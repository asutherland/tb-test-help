Index: tool/spaceanal.tcl
===================================================================
--- tool/spaceanal.tcl
+++ tool/spaceanal.tcl
@@ -160,10 +160,15 @@
 proc quote {txt} {
   regsub -all ' $txt '' q
   return '$q'
 }
 
+proc dblquote {txt} {
+  regsub -all "\"" $txt "\\\"" q
+  return "\"$q\""
+}
+
 # Generate a single line of output in the statistics section of the
 # report.
 #
 proc statline {title value {extra {}}} {
   set len [string length $title]
@@ -383,244 +388,29 @@
 # set total_payload [mem eval "SELECT sum(payload) FROM space_used"]
 set user_payload [mem one {SELECT int(sum(payload)) FROM space_used
      WHERE NOT is_index AND name NOT LIKE 'sqlite_master'}]
 set user_percent [percent $user_payload $file_bytes]
 
-# Output the summary statistics calculated above.
+
+# Output a dump of the in-memory database. This can be used for more
+# complex offline analysis.
 #
-puts "/** Disk-Space Utilization Report For $file_to_analyze"
-catch {
-  puts "*** As of [clock format [clock seconds] -format {%Y-%b-%d %H:%M:%S}]"
-}
-puts ""
-statline {Page size in bytes} $pageSize
-statline {Pages in the whole file (measured)} $file_pgcnt
-statline {Pages in the whole file (calculated)} $file_pgcnt2
-statline {Pages that store data} $inuse_pgcnt $inuse_percent
-statline {Pages on the freelist (per header)} $free_pgcnt2 $free_percent2
-statline {Pages on the freelist (calculated)} $free_pgcnt $free_percent
-statline {Pages of auto-vacuum overhead} $av_pgcnt $av_percent
-statline {Number of tables in the database} $ntable
-statline {Number of indices} $nindex
-statline {Number of named indices} $nmanindex
-statline {Automatically generated indices} $nautoindex
-statline {Size of the file in bytes} $file_bytes
-statline {Bytes of user payload stored} $user_payload $user_percent
-
-# Output table rankings
-#
-puts ""
-puts "*** Page counts for all tables with their indices ********************"
-puts ""
-mem eval {SELECT tblname, count(*) AS cnt,
-              int(sum(int_pages+leaf_pages+ovfl_pages)) AS size
-          FROM space_used GROUP BY tblname ORDER BY size+0 DESC, tblname} {} {
-  statline [string toupper $tblname] $size [percent $size $file_pgcnt]
+puts "\{\"pagetable\": \["
+unset -nocomplain x
+db eval {SELECT * FROM temp.dbstat} x {
+    puts -nonewline "\["
+  set sep ""
+  foreach col $x(*) {
+    set v $x($col)
+    if {$v=="" || ![string is double $v]} {set v [dblquote $v]}
+    puts -nonewline $sep$v
+    set sep ,
+  }
+  puts "\],"
 }
-
-# Output subreports
-#
-if {$nindex>0} {
-  subreport {All tables and indices} 1
-}
-subreport {All tables} {NOT is_index}
-if {$nindex>0} {
-  subreport {All indices} {is_index}
-}
-foreach tbl [mem eval {SELECT name FROM space_used WHERE NOT is_index
-                       ORDER BY name}] {
-  regsub ' $tbl '' qn
-  set name [string toupper $tbl]
-  set n [mem eval "SELECT count(*) FROM space_used WHERE tblname='$qn'"]
-  if {$n>1} {
-    subreport "Table $name and all its indices" "tblname='$qn'"
-    subreport "Table $name w/o any indices" "name='$qn'"
-    subreport "Indices of table $name" "tblname='$qn' AND is_index"
-  } else {
-    subreport "Table $name" "name='$qn'"
-  }
-}
-
-# Output instructions on what the numbers above mean.
-#
-puts {
-*** Definitions ******************************************************
-
-Page size in bytes
-
-    The number of bytes in a single page of the database file.
-    Usually 1024.
-
-Number of pages in the whole file
-}
-puts \
-"    The number of $pageSize-byte pages that go into forming the complete
-    database"
-puts \
-{
-Pages that store data
-
-    The number of pages that store data, either as primary B*Tree pages or
-    as overflow pages.  The number at the right is the data pages divided by
-    the total number of pages in the file.
-
-Pages on the freelist
-
-    The number of pages that are not currently in use but are reserved for
-    future use.  The percentage at the right is the number of freelist pages
-    divided by the total number of pages in the file.
-
-Pages of auto-vacuum overhead
-
-    The number of pages that store data used by the database to facilitate
-    auto-vacuum. This is zero for databases that do not support auto-vacuum.
-
-Number of tables in the database
-
-    The number of tables in the database, including the SQLITE_MASTER table
-    used to store schema information.
-
-Number of indices
-
-    The total number of indices in the database.
-
-Number of named indices
-
-    The number of indices created using an explicit CREATE INDEX statement.
-
-Automatically generated indices
-
-    The number of indices used to implement PRIMARY KEY or UNIQUE constraints
-    on tables.
-
-Size of the file in bytes
-
-    The total amount of disk space used by the entire database files.
-
-Bytes of user payload stored
-
-    The total number of bytes of user payload stored in the database. The
-    schema information in the SQLITE_MASTER table is not counted when
-    computing this number.  The percentage at the right shows the payload
-    divided by the total file size.
-
-Percentage of total database
-
-    The amount of the complete database file that is devoted to storing
-    information described by this category.
-
-Number of entries
-
-    The total number of B-Tree key/value pairs stored under this category.
-
-Bytes of storage consumed
-
-    The total amount of disk space required to store all B-Tree entries
-    under this category.  The is the total number of pages used times
-    the pages size.
-
-Bytes of payload
-
-    The amount of payload stored under this category.  Payload is the data
-    part of table entries and the key part of index entries.  The percentage
-    at the right is the bytes of payload divided by the bytes of storage
-    consumed.
-
-Average payload per entry
-
-    The average amount of payload on each entry.  This is just the bytes of
-    payload divided by the number of entries.
-
-Average unused bytes per entry
-
-    The average amount of free space remaining on all pages under this
-    category on a per-entry basis.  This is the number of unused bytes on
-    all pages divided by the number of entries.
-
-Fragmentation
-
-    The percentage of pages in the table or index that are not
-    consecutive in the disk file.  Many filesystems are optimized
-    for sequential file access so smaller fragmentation numbers
-    sometimes result in faster queries, especially for larger
-    database files that do not fit in the disk cache.
-
-Maximum payload per entry
-
-    The largest payload size of any entry.
-
-Entries that use overflow
-
-    The number of entries that user one or more overflow pages.
-
-Total pages used
-
-    This is the number of pages used to hold all information in the current
-    category.  This is the sum of index, primary, and overflow pages.
-
-Index pages used
-
-    This is the number of pages in a table B-tree that hold only key (rowid)
-    information and no data.
-
-Primary pages used
-
-    This is the number of B-tree pages that hold both key and data.
-
-Overflow pages used
-
-    The total number of overflow pages used for this category.
-
-Unused bytes on index pages
-
-    The total number of bytes of unused space on all index pages.  The
-    percentage at the right is the number of unused bytes divided by the
-    total number of bytes on index pages.
-
-Unused bytes on primary pages
-
-    The total number of bytes of unused space on all primary pages.  The
-    percentage at the right is the number of unused bytes divided by the
-    total number of bytes on primary pages.
-
-Unused bytes on overflow pages
-
-    The total number of bytes of unused space on all overflow pages.  The
-    percentage at the right is the number of unused bytes divided by the
-    total number of bytes on overflow pages.
-
-Unused bytes on all pages
-
-    The total number of bytes of unused space on all primary and overflow
-    pages.  The percentage at the right is the number of unused bytes
-    divided by the total number of bytes.
-}
-
-# Output a dump of the in-memory database. This can be used for more
-# complex offline analysis.
-#
-puts "**********************************************************************"
-puts "The entire text of this report can be sourced into any SQL database"
-puts "engine for further analysis.  All of the text above is an SQL comment."
-puts "The data used to generate this report follows:"
-puts "*/"
-puts "BEGIN;"
-puts $tabledef
-unset -nocomplain x
-mem eval {SELECT * FROM space_used} x {
-  puts -nonewline "INSERT INTO space_used VALUES"
-  set sep (
-  foreach col $x(*) {
-    set v $x($col)
-    if {$v=="" || ![string is double $v]} {set v [quote $v]}
-    puts -nonewline $sep$v
-    set sep ,
-  }
-  puts ");"
-}
-puts "COMMIT;"
+    puts "null\]\}"
 
 } err]} {
   puts "ERROR: $err"
   puts $errorInfo
   exit 1
 }

